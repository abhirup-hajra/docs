{
  "openapi": "3.1.0",
  "info": {
    "title": "FlintAI API",
    "version": "1.0.0",
    "description": "FlintAI is a minimal, highly abstracted OpenAI-compatible API used to interact with chat, models, and streaming responses. Built by Flint Studios."
  },
  "servers": [
    {
      "url": "https://ai.flintstudios.workers.dev/v1",
      "description": "Primary API server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "Authenticate using your FlintAI API key"
      }
    },
    "schemas": {
      "Message": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "enum": ["user", "assistant", "system", "tool"],
            "description": "Role of the message author"
          },
          "content": {
            "type": "string",
            "description": "Text content of the message"
          }
        },
        "required": ["role", "content"]
      },
      "Model": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "created": { "type": "integer" },
          "owned_by": { "type": "string" },
          "description": { "type": "string" },
          "modifiers": { "type": "array", "items": { "type": "string" } }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/models": {
      "get": {
        "summary": "List models",
        "description": "Retrieve all available models with their metadata.",
        "operationId": "listModels",
        "x-codeSamples": [
          {
            "lang": "python",
            "lable": "FlintAI SDK",
            "source": "from flintai import FlintAI\n\nclient = FlintAI()\n\nfor model in client.models():\n    print(' - '+ model.name)"
          }
        ],
        "responses": {
          "200": {
            "description": "List of models",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Model" }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/chat/completions": {
      "post": {
        "summary": "Create chat completion",
        "description": "Creates a model response for the given conversation. This endpoint accepts system, user, assistant, and tool messages, and supports function/tool calling and streaming responses.",
        "operationId": "createChatCompletion",
        "x-codeSamples": [
          {
            "lang": "python",
            "lable": "FlintAI SDK",
            "source": "from flintai import FlintAI\n\nai = FlintAI(api_key='<token>')\nresponse = ai.complete(messages=[{\n                                  'role': 'user',\n                                  'content': '<string>'\n                                }] or '<string>',\n                       model='<string>'\n                      )\n\nprint(response.content)"
          }
        ],
        "x-mint": {
          "metadata": {
            "title": "Chat Completion API",
            "description": "The Chat Completions API allows you to send messages and tools to FlintAI models, returning assistant responses or tool calls. Compatible with OpenAI SDKs."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["model", "messages"],
                "properties": {
                  "model": {
                    "type": "string",
                    "description": "ID of the model to use.",
                    "example": "flintai-mini"
                  },
                  "messages": {
                    "type": "array",
                    "description": "An array of messages in the conversation so far.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "role": {
                          "type": "string",
                          "enum": ["system", "user", "assistant", "tool"],
                          "description": "The role of the message author."
                        },
                        "content": {
                          "type": ["string", "null"],
                          "description": "The contents of the message. Optional if tool_calls are provided."
                        },
                        "tool_calls": {
                          "type": ["array", "null"],
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": { "type": "string" },
                              "type": { "type": "string", "example": "function" },
                              "function": {
                                "type": "object",
                                "properties": {
                                  "name": { "type": "string" },
                                  "arguments": {
                                    "type": "string",
                                    "description": "Arguments in JSON format."
                                  }
                                },
                                "required": ["name", "arguments"]
                              }
                            },
                            "required": ["id", "type", "function"]
                          }
                        },
                        "tool_call_id": {
                          "type": ["string", "null"],
                          "description": "The tool call ID that this message responds to. Only used for role=tool."
                        }
                      },
                      "required": ["role"]
                    }
                  },
                  "tools": {
                    "type": ["array", "null"],
                    "description": "A list of tools the model may call.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "example": "function" },
                        "function": {
                          "type": "object",
                          "properties": {
                            "name": { "type": "string" },
                            "description": { "type": "string" },
                            "parameters": {
                              "type": "object",
                              "description": "Function parameters defined as a JSON Schema object."
                            }
                          },
                          "required": ["name"]
                        }
                      },
                      "required": ["type"]
                    }
                  },
                  "tool_choice": {
                    "type": ["string", "object", "null"],
                    "description": "Controls which tool (if any) is called by the model. One of `none`, `auto`, `required`, or an explicit function object."
                  },
                  "stream": {
                    "type": ["boolean", "null"],
                    "description": "If true, partial message deltas will be sent as SSE stream. Defaults to false.",
                    "default": false
                  },
                  "max_completion_tokens": {
                    "type": ["integer", "null"],
                    "description": "The maximum number of tokens that can be generated in the chat completion."
                  },
                  "temperature": {
                    "type": ["number", "null"],
                    "description": "Sampling temperature. Range 0–2. Higher values = more randomness.",
                    "example": 0.7
                  },
                  "top_p": {
                    "type": ["number", "null"],
                    "description": "Nucleus sampling value. Range 0–1."
                  },
                  "stop": {
                    "type": ["string", "null"],
                    "description": "A string which, if encountered, stops further token generation."
                  }
                }
              },
              "examples": {
                "basicRequest": {
                  "summary": "Requesting a basic chat completion",
                  "value": {
                    "model": "flintai-mini",
                    "messages": [
                      { "role": "user", "content": "Write a poem about time." }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful chat completion response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "object": { "type": "string", "example": "chat.completion" },
                    "created": {
                      "type": "integer",
                      "description": "Unix timestamp (seconds)"
                    },
                    "model": { "type": "string" },
                    "choices": {
                      "type": "array",
                      "description": "List of chat completion choices",
                      "items": {
                        "type": "object",
                        "properties": {
                          "index": { "type": "integer" },
                          "finish_reason": {
                            "type": "string",
                            "description": "The reason the model stopped generating tokens."
                          },
                          "message": {
                            "type": "object",
                            "properties": {
                              "role": { "type": "string", "example": "assistant" },
                              "content": { "type": ["string", "null"] },
                              "reasoning": {
                                "type": ["string", "null"],
                                "description": "The model’s reasoning for the response (reasoning models only)."
                              },
                              "tool_calls": {
                                "type": ["array", "null"],
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": { "type": "string" },
                                    "type": { "type": "string", "example": "function" },
                                    "function": {
                                      "type": "object",
                                      "properties": {
                                        "name": { "type": "string" },
                                        "arguments": { "type": "string" }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "usage": {
                      "type": "object",
                      "properties": {
                        "total_tokens": { "type": "integer" },
                        "total_time": { "type": "number" }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pipe/{model}": {
      "post": {
        "summary": "FlintAI Pipe API",
        "description": "A simplified endpoint for direct prompt–response generation using the specified model. The response body contains only the generated text, while response metadata such as model ID and token usage are returned in the HTTP headers.",
        "operationId": "pipeModel",
        "x-codeSamples": [
          {
            "lang": "python",
            "label": "FlintAI SDK",
            "source": "from flintai import FlintAI\n\nai = FlintAI(api_key='<token>')\nresponse = ai.pipe(prompt='<string>', model='<string>')\n\nprint(response.content)"
          },
          {
            "lang": "bash",
            "label": "cURL",
            "source": "curl -X POST \"https://ai.flintstudios.workers.dev/v1/pipe/flintai-mini\" \\\n -H \"Authorization: Bearer $FLINTAI_API_KEY\" \\\n -H \"Content-Type: application/json\" \\\n -d '{\"prompt\": \"Write a short haiku about the night sky.\"}'"
          }
        ],
        "parameters": [
          {
            "name": "model",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Model ID to use for text generation."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "prompt": {
                    "type": "string",
                    "description": "Prompt text to generate a response from."
                  },
                  "context": {
                    "type": "string",
                    "description": "Optional contextual string that provides background information to the model."
                  }
                },
                "required": ["prompt"]
              },
              "examples": {
                "basicRequest": {
                  "summary": "Basic Pipe request",
                  "value": {
                    "prompt": "Write a short haiku about the night sky."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Plain text response containing only the generated output.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Silent stars whisper\nThrough the endless, quiet void\nDreams drift into night."
                }
              }
            },
            "headers": {
              "Model": {
                "description": "Model ID used for generation.",
                "schema": {
                  "type": "string",
                  "example": "flintai-mini"
                }
              },
              "ID": {
                "description": "Unique response identifier.",
                "schema": {
                  "type": "string",
                  "example": "pipe-abc123"
                }
              },
              "Total-Time": {
                "description": "Total processing time for this request (in seconds).",
                "schema": {
                  "type": "number",
                  "example": 0.79
                }
              },
              "Total-Tokens": {
                "description": "Total tokens consumed by the request.",
                "schema": {
                  "type": "integer",
                  "example": 47
                }
              },
              "TPS": {
                "description": "Tokens per second (processing speed).",
                "schema": {
                  "type": "number",
                  "example": 59.5
                }
              }
            }
          }
        }
      }
    }
  },
  "x-mint": {
    "metadata": {
      "title": "FlintAI API Reference",
      "description": "Comprehensive API documentation for FlintAI endpoints."
    }
  }
}
